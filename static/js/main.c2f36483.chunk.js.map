{"version":3,"sources":["components/CustomCheckbox.js","components/List.js","components/ListNew.js","components/CustomSpinner.js","components/ListMain.js","components/Header.js","App.js","index.js"],"names":["CustomCheckBox","props","react_default","a","createElement","style","className","name","type","checked","id","onChange","e","htmlFor","label","List","_useState","useState","_useState2","Object","slicedToArray","isEdit","setIsEdit","_useState3","task","title","_useState4","taskTitle","setTaskTitle","_useState5","description","_useState6","taskDesc","setTaskDesc","_useState7","time","_useState8","taskTime","setTaskTime","_useState9","Boolean","isDone","_useState10","taskDone","setTaskDone","_useState11","_useState12","showComponent","setShowComponent","_useState13","_useState14","listEffect","setListEffect","_useState15","_useState16","doneEffect","setDoneEffect","useEffect","UpdateTaskHandler","taskUpdate","_id","setTime","length","target","updateTask","placeholder","disabled","value","maxLength","onClick","preventDefault","react_fontawesome_index_es","icon","faEdit","setTimeout","deleteTask","DeleteTaskHandler","faTrash","ListNew","animContainer","setAnimContainer","animList","setListAnim","setTaskDescription","taskIsTimeSet","setTaskIsTimeSet","closeWindow","color","rows","newID","newTask","addNewTask","console","log","closeWindowHandler","CustomSpinner","msgDisplay","setMsgDisplay","ListMain","taskList","tasks","setTasks","isLoaded","setIsLoaded","addNew","setAddNew","fetchURL","UpdateTask","taskUpdated","fetchOption","method","headers","Content-type","body","JSON","stringify","fetch","then","res","json","result","DeleteTask","ListNew_ListNew","map","index","List_List","key","testFunc","tempFunc","CustomSpinner_CustomSpinner","Header","href","App","tasksLists","setTasksLists","API_URL","error","Header_Header","ListMain_ListMain","rootElement","document","getElementById","ReactDOM","render"],"mappings":"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","file":"static/js/main.c2f36483.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\n\r\nimport \"./CustomCheckbox.css\";\r\nimport \"@fortawesome/fontawesome-svg-core/styles.css\";\r\n\r\nexport default function CustomCheckBox(props) {\r\n  return (\r\n    <div style={props.style} className={\"checkbox-container\"}>\r\n      <input\r\n        className={\"checkbox \" + props.className}\r\n        name={props.name}\r\n        type=\"checkbox\"\r\n        checked={props.checked}\r\n        id={props.id}\r\n        onChange={e => {\r\n          props.onChange(e);\r\n        }}\r\n      />\r\n      <label htmlFor={props.id}>{props.label}</label>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { faEdit, faTrash } from \"@fortawesome/free-solid-svg-icons/\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\n\r\nimport CustomCheckBox from \"./CustomCheckbox.js\";\r\n\r\nimport \"../assests/css/fonts/fonts.css\";\r\nimport \"./List.css\";\r\n\r\nexport default function List(props) {\r\n  const [isEdit, setIsEdit] = useState(true);\r\n\r\n  const [taskTitle, setTaskTitle] = useState(props.task.title);\r\n  const [taskDesc, setTaskDesc] = useState(props.task.description);\r\n  const [taskTime, setTaskTime] = useState(props.task.time);\r\n  const [taskDone, setTaskDone] = useState(Boolean(props.task.isDone));\r\n\r\n  const [showComponent, setShowComponent] = useState(false);\r\n  const [listEffect, setListEffect] = useState(\"list-add\");\r\n  const [doneEffect, setDoneEffect] = useState(\r\n    taskDone ? \"list-bg-done-show\" : \"\"\r\n  );\r\n\r\n  useEffect(() => {\r\n    setShowComponent(true);\r\n  });\r\n\r\n  //****UPDATES ON TASKS HERE\r\n  const UpdateTaskHandler = (e) => {\r\n    //SETUP UPDATED TASK\r\n    let taskUpdate = {\r\n      _id: props.task._id,\r\n      title: taskTitle,\r\n      description: taskDesc,\r\n      setTime: taskTime.length > 0 ? true : false,\r\n      time: taskTime,\r\n      isDone: e.target.checked,\r\n    };\r\n\r\n    //SEND TO MAIN FOR UPDATE\r\n    props.updateTask(taskUpdate);\r\n  };\r\n\r\n  //****DELETION ON TASKS HERE\r\n  const DeleteTaskHandler = (task) => {\r\n    props.deleteTask(props.task);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {showComponent && (\r\n        <div className={\"list \" + listEffect}>\r\n          <div className={\"list-bg-done \" + doneEffect} />\r\n          <div className=\"list-col-1\">\r\n            <CustomCheckBox\r\n              id={\"cb\" + props.task._id}\r\n              checked={taskDone}\r\n              onChange={(e) => {\r\n                setTaskDone(e.target.checked);\r\n\r\n                if (e.target.checked) {\r\n                  setDoneEffect(\"list-bg-done-show\");\r\n                } else {\r\n                  setDoneEffect(\"list-bg-done-close\");\r\n                }\r\n\r\n                UpdateTaskHandler(e);\r\n              }}\r\n            />\r\n          </div>\r\n          <div className=\"list-col-2\">\r\n            <input\r\n              className={\r\n                doneEffect\r\n                  ? \"list-col-2-input\" /* Add effects here if DONE */\r\n                  : \"list-col-2-input\"\r\n              }\r\n              placeholder=\"Edit Title\"\r\n              type=\"text\"\r\n              id={\"txt\" + props.id}\r\n              disabled={isEdit}\r\n              value={taskTitle}\r\n              onChange={(e) => {\r\n                setTaskTitle(e.target.value);\r\n              }}\r\n            />\r\n            <span className=\"input-effect\" />\r\n            <input\r\n              type=\"time\"\r\n              className=\"list-col-2-time\"\r\n              value={taskTime}\r\n              disabled={isEdit}\r\n              onChange={(e) => {\r\n                setTaskTime(e.target.value);\r\n              }}\r\n            />\r\n            <textarea\r\n              disabled={isEdit}\r\n              className=\"list-col-2-desc\"\r\n              value={taskDesc}\r\n              placeholder=\"Short description here...\"\r\n              maxLength={45}\r\n              onChange={(e) => {\r\n                setTaskDesc(e.target.value);\r\n              }}\r\n            />\r\n            <span className=\"description-effect\" />\r\n          </div>\r\n\r\n          <div className=\"list-col-3\">\r\n            <button\r\n              className={isEdit ? \"btn btn-edit\" : \"btn btn-done\"}\r\n              onClick={(e) => {\r\n                e.preventDefault();\r\n                //If in Edit Mode and pressed DONE\r\n                if (!isEdit) {\r\n                  UpdateTaskHandler(e);\r\n                }\r\n\r\n                setIsEdit(!isEdit);\r\n              }}\r\n            >\r\n              <FontAwesomeIcon className=\"btn-icon\" icon={faEdit} />\r\n              <span className=\"btn-text\">{isEdit ? \"EDIT\" : \"DONE\"}</span>\r\n            </button>\r\n            <button\r\n              className=\"btn btn-delete\"\r\n              onClick={(e) => {\r\n                e.preventDefault();\r\n                setListEffect(\"list-delete\");\r\n                setTimeout(() => {\r\n                  DeleteTaskHandler(props.task);\r\n                }, 200);\r\n              }}\r\n            >\r\n              <FontAwesomeIcon className=\"btn-icon\" icon={faTrash} />\r\n              <span className=\"btn-text\">DELETE</span>\r\n            </button>\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      {/* <div className=\"list-bottom-border\"> </div> */}\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\n\r\nimport \"./ListNew.css\";\r\nimport CustomCheckbox from \"./CustomCheckbox.js\";\r\n\r\nexport default function ListNew(props) {\r\n  //Animations\r\n  const [animContainer, setAnimContainer] = useState(\r\n    \"list-new-container-anim-show\"\r\n  );\r\n  const [animList, setListAnim] = useState(\"list-new-anim-in\");\r\n\r\n  //Input control\r\n  //..useState\r\n  //............\r\n  const [taskTitle, setTaskTitle] = useState(\"\");\r\n  const [taskDesc, setTaskDescription] = useState(\"\");\r\n  const [taskIsTimeSet, setTaskIsTimeSet] = useState(false);\r\n  const [taskTime, setTaskTime] = useState(\"\");\r\n\r\n  const closeWindowHandler = (e) => {\r\n    if (taskTitle.length > 0) {\r\n      //Animate\r\n      setAnimContainer(\"list-new-container-anim-close\");\r\n      setListAnim(\"list-new-anim-out\");\r\n\r\n      //Give some time to show effect\r\n      setTimeout((e) => {\r\n        const newTask = {\r\n          title: taskTitle,\r\n          description: taskDesc,\r\n          setTime: taskIsTimeSet,\r\n          time: taskTime,\r\n          isDone: false,\r\n        };\r\n        props.addNewTask(newTask);\r\n        props.closeWindow();\r\n      }, 800);\r\n    } else {\r\n      console.log(\"title is blank\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className={\"list-new-container \" + animContainer}>\r\n      <div className={\"list-new \" + animList}>\r\n        <div className=\"list-new-btn-cancel-container\">\r\n          <button\r\n            className=\"list-new-btn-cancel\"\r\n            onClick={(e) => {\r\n              e.preventDefault();\r\n              setAnimContainer(\"list-new-container-anim-close\");\r\n              setListAnim(\"list-new-anim-out\");\r\n\r\n              setTimeout(() => {\r\n                props.closeWindow();\r\n              }, 800);\r\n            }}\r\n          >\r\n            X\r\n          </button>\r\n        </div>\r\n\r\n        <h2 className=\"list-new-title\">New Task</h2>\r\n        <label>\r\n          Title <span style={{ color: \"#d63031\" }}>*</span>\r\n        </label>\r\n        <input\r\n          name=\"title\"\r\n          type=\"text\"\r\n          className=\"list-new-input\"\r\n          value={taskTitle}\r\n          onChange={(e) => {\r\n            setTaskTitle(e.target.value);\r\n          }}\r\n        />\r\n        <span className=\"input-effect\" />\r\n\r\n        <label>Description</label>\r\n        <textarea\r\n          name=\"description\"\r\n          placeholder=\"Description here\"\r\n          className=\"list-new-desc\"\r\n          value={taskDesc}\r\n          maxLength={45}\r\n          rows={2}\r\n          onChange={(e) => {\r\n            setTaskDescription(e.target.value);\r\n          }}\r\n        />\r\n        <span className=\"desc-effect\" />\r\n\r\n        <label>Set Time</label>\r\n        <CustomCheckbox\r\n          id={\"new\" + props.newID}\r\n          name=\"setTime\"\r\n          checked={taskIsTimeSet}\r\n          onChange={(e) => {\r\n            setTaskIsTimeSet(e.target.checked);\r\n          }}\r\n        />\r\n        <input\r\n          name=\"time\"\r\n          type=\"time\"\r\n          className=\"list-new-time\"\r\n          disabled={taskIsTimeSet ? false : true}\r\n          value={taskIsTimeSet ? taskTime : \"\"}\r\n          onChange={(e) => {\r\n            setTaskTime(e.target.value);\r\n          }}\r\n        />\r\n\r\n        <button\r\n          className=\"list-new-btn-done\"\r\n          onClick={(e) => {\r\n            e.preventDefault();\r\n            closeWindowHandler(e);\r\n          }}\r\n        >\r\n          DONE\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport \"./CustomSpinner.css\";\r\n\r\nexport default function CustomSpinner(props) {\r\n  const [msgDisplay, setMsgDisplay] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    setMsgDisplay(\"Please wait...\");\r\n\r\n    setTimeout(() => {\r\n      setMsgDisplay(\"Retrieving from space...\");\r\n    }, 1000);\r\n\r\n    setTimeout(() => {\r\n      setMsgDisplay(\"Nearly there...\");\r\n    }, 1000);\r\n\r\n    setTimeout(() => {\r\n      setMsgDisplay(\"Hold on...\");\r\n    }, 1000);\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"spinner\"></div>\r\n      <h2 className=\"loading-msg\">{msgDisplay}</h2>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\n\r\nimport \"../assests/css/fonts/fonts.css\";\r\nimport \"./ListMain.css\";\r\n\r\nimport List from \"./List\";\r\nimport ListNew from \"./ListNew\";\r\nimport CustomSpinner from \"./CustomSpinner\";\r\n\r\nexport default function ListMain(props) {\r\n  const [tasks, setTasks] = useState(props.taskList.tasks);\r\n  const [isLoaded, setIsLoaded] = useState(true);\r\n  const [addNew, setAddNew] = useState(false);\r\n\r\n  const fetchURL =\r\n    \"https://protected-beyond-39550.herokuapp.com/api/tasklists/task/0/0\";\r\n\r\n  // const fetchURL = \"http://localhost:5000/api/tasklists/task/0/0\";\r\n\r\n  //Add new task\r\n  const CreateNewTask = (task) => {\r\n    setIsLoaded(false);\r\n\r\n    const fetchOption = {\r\n      method: \"PUT\",\r\n      headers: { \"Content-type\": \"application/json\" },\r\n      body: JSON.stringify({\r\n        title: task.title,\r\n        description: task.description,\r\n        setTime: task.setTime,\r\n        time: task.time,\r\n        isDone: task.isDone,\r\n      }),\r\n    };\r\n    fetch(fetchURL, fetchOption)\r\n      .then((res) => res.json())\r\n      .then((result) => {\r\n        setTasks(result.tasks);\r\n      });\r\n    setIsLoaded(true);\r\n  };\r\n\r\n  //Update task\r\n  const UpdateTask = (taskUpdated) => {\r\n    setIsLoaded(false);\r\n\r\n    const fetchOption = {\r\n      method: \"POST\",\r\n      headers: { \"Content-type\": \"application/json\" },\r\n      body: JSON.stringify({\r\n        _id: taskUpdated._id,\r\n        title: taskUpdated.title,\r\n        description: taskUpdated.description,\r\n        setTime: taskUpdated.setTime,\r\n        time: taskUpdated.time,\r\n        isDone: taskUpdated.isDone,\r\n      }),\r\n    };\r\n    fetch(fetchURL, fetchOption)\r\n      .then((res) => res.json())\r\n      .then((result) => {\r\n        setTasks(result.tasks);\r\n      });\r\n\r\n    setIsLoaded(true);\r\n  };\r\n  //Delete task\r\n  const DeleteTask = (task) => {\r\n    setIsLoaded(false);\r\n    const fetchOption = {\r\n      method: \"DELETE\",\r\n      headers: { \"Content-type\": \"application/json\" },\r\n      body: JSON.stringify({\r\n        _id: task._id,\r\n      }),\r\n    };\r\n    fetch(fetchURL, fetchOption)\r\n      .then((res) => res.json())\r\n      .then((result) => {\r\n        setTasks(result.tasks);\r\n      });\r\n    setIsLoaded(true);\r\n  };\r\n\r\n  const CloseAddNew = () => {\r\n    setAddNew(false);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {addNew && (\r\n        <ListNew\r\n          addNewTask={CreateNewTask}\r\n          closeWindow={CloseAddNew}\r\n          newID={tasks.length + 1}\r\n        />\r\n      )}\r\n      <div className={isLoaded ? \"list-all\" : \"list-all list-all-disabled\"}>\r\n        {isLoaded ? (\r\n          <div>\r\n            <div className=\"list-all-title\">\r\n              <h2 className=\"title\">{props.taskList.title}</h2>\r\n            </div>\r\n            {tasks.map((task, index) => {\r\n              return (\r\n                <List\r\n                  id={task._id}\r\n                  key={task._id}\r\n                  task={task}\r\n                  deleteTask={DeleteTask}\r\n                  updateTask={UpdateTask}\r\n                  testFunc={props.tempFunc}\r\n                />\r\n              );\r\n            })}\r\n            <div className=\"list-all-add-task\">\r\n              <button\r\n                onClick={(e) => {\r\n                  e.preventDefault();\r\n                  setAddNew(true);\r\n                }}\r\n              >\r\n                + ADD TASK\r\n              </button>\r\n            </div>\r\n          </div>\r\n        ) : (\r\n          <h2 className=\"list-all-loading-pos\">\r\n            <CustomSpinner />\r\n          </h2>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\nimport \"../assests/css/fonts/fonts.css\";\r\nimport \"./Header.css\";\r\n\r\nexport default function Header(props) {\r\n  return (\r\n    <div className=\"header\">\r\n      <h1>{props.title}</h1>\r\n      <p>\r\n        Made by\r\n        <a\r\n          className=\"header-link\"\r\n          href=\"https://github.com/rem029\"\r\n          target=\"_blank\"\r\n        >\r\n          {\" \"}\r\n          rem029\r\n        </a>\r\n      </p>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport ListMain from \"./components/ListMain.js\";\r\nimport Header from \"./components/Header.js\";\r\nimport CustomSpinner from \"./components/CustomSpinner.js\";\r\n\r\nimport \"./assests/css/fonts/fonts.css\";\r\nimport \"./styles.css\";\r\n\r\nexport default function App() {\r\n  const [tasksLists, setTasksLists] = useState();\r\n  const [isLoaded, setIsLoaded] = useState(false);\r\n\r\n  const API_URL =\r\n    \"https://protected-beyond-39550.herokuapp.com/api/tasklists/0/0\";\r\n\r\n  // const API_URL = \"http://localhost:5000/api/tasklists/0/0\";\r\n\r\n  useEffect(() => {\r\n    setIsLoaded(false);\r\n    fetch(API_URL)\r\n      .then((res) => res.json())\r\n      .then(\r\n        (result) => {\r\n          setTasksLists(result);\r\n          setIsLoaded(true);\r\n        },\r\n        (error) => {\r\n          setTasksLists(error);\r\n          setIsLoaded(true);\r\n        }\r\n      );\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <Header title=\"WhatToDo\" />\r\n      {isLoaded ? (\r\n        <ListMain taskList={tasksLists} API_URL={API_URL} />\r\n      ) : (\r\n        <h1 className=\"loading-pos\">\r\n          <CustomSpinner />\r\n        </h1>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\n\r\nimport App from \"./App\";\r\n\r\nconst rootElement = document.getElementById(\"root\");\r\nReactDOM.render(<App />, rootElement);\r\n"],"sourceRoot":""}