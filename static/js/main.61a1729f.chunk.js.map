{"version":3,"sources":["components/CustomCheckbox.js","components/List.js","components/ListNew.js","components/ListMain.js","components/Header.js","temp/taskDB.js","App.js","index.js"],"names":["CustomCheckBox","props","react_default","a","createElement","style","className","name","type","checked","id","onChange","e","htmlFor","label","List","_useState","useState","_useState2","Object","slicedToArray","isEdit","setIsEdit","_useState3","task","title","_useState4","taskTitle","setTaskTitle","_useState5","description","_useState6","taskDesc","setTaskDesc","_useState7","time","_useState8","taskTime","setTaskTime","_useState9","isDone","_useState10","taskDone","setTaskDone","_useState11","_useState12","showComponent","setShowComponent","_useState13","_useState14","listEffect","setListEffect","_useState15","_useState16","doneEffect","setDoneEffect","useEffect","setTimeout","delay","UpdateTaskHandler","taskUpdate","setTime","length","target","updateTask","placeholder","disabled","value","console","log","maxLength","onClick","preventDefault","react_fontawesome_index_es","icon","faEdit","deleteTask","DeleteTaskHandler","faTrash","ListNew","animContainer","setAnimContainer","animList","setListAnim","setTaskDescription","taskIsTimeSet","setTaskIsTimeSet","closeWindow","color","rows","newID","newTask","addNewTask","closeWindowHandler","ListMain","taskList","tasks","setTasks","isLoading","setIsLoading","addNew","setAddNew","UpdateTask","taskUpdated","copyTasks","syncListbyTLID","DeleteTask","filter","arr","ListNew_ListNew","concat","map","index","List_List","key","testFunc","tempFunc","Header","taskDB","user","password","tasklists","Date","getHours","getMinutes","App","userDB","setUserDB","Header_Header","ListMain_ListMain","taskListID","tasksUpdated","copyUserDB","rootElement","document","getElementById","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.61a1729f.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\n\r\nimport \"./CustomCheckbox.css\";\r\nimport \"@fortawesome/fontawesome-svg-core/styles.css\";\r\n\r\nexport default function CustomCheckBox(props) {\r\n  return (\r\n    <div style={props.style} className={\"checkbox-container\"}>\r\n      <input\r\n        className={\"checkbox \" + props.className}\r\n        name={props.name}\r\n        type=\"checkbox\"\r\n        checked={props.checked}\r\n        id={props.id}\r\n        onChange={e => {\r\n          props.onChange(e);\r\n        }}\r\n      />\r\n      <label htmlFor={props.id}>{props.label}</label>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { faEdit, faTrash } from \"@fortawesome/free-solid-svg-icons/\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\n\r\nimport CustomCheckBox from \"./CustomCheckbox.js\";\r\n\r\nimport \"../assests/css/fonts/fonts.css\";\r\nimport \"./List.css\";\r\n\r\nexport default function List(props) {\r\n  const [isEdit, setIsEdit] = useState(true);\r\n\r\n  const [taskTitle, setTaskTitle] = useState(props.task.title);\r\n  const [taskDesc, setTaskDesc] = useState(props.task.description);\r\n  const [taskTime, setTaskTime] = useState(props.task.time);\r\n  const [taskDone, setTaskDone] = useState(props.task.isDone);\r\n\r\n  const [showComponent, setShowComponent] = useState(false);\r\n  const [listEffect, setListEffect] = useState(\"list-add\");\r\n  const [doneEffect, setDoneEffect] = useState(\r\n    taskDone ? \"list-bg-done-show\" : \"\"\r\n  );\r\n\r\n  useEffect(() => {\r\n    setTimeout(() => {\r\n      setShowComponent(true);\r\n    }, props.delay);\r\n  });\r\n\r\n  \r\n\r\n  //****UPDATES ON TASKS HERE\r\n  const UpdateTaskHandler = e => {\r\n    //SETUP UPDATED TASK\r\n    let taskUpdate = {\r\n      id: props.task.id,\r\n      title: taskTitle,\r\n      description: taskDesc,\r\n      setTime: taskTime.length > 0 ? true : false,\r\n      time: taskTime,\r\n      isDone: e.target.checked\r\n    };\r\n\r\n    //SEND TO MAIN FOR UPDATE\r\n    props.updateTask(taskUpdate);\r\n  };\r\n\r\n  //****DELETION ON TASKS HERE\r\n  const DeleteTaskHandler = task => {\r\n    props.deleteTask(props.task);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {showComponent && (\r\n        <div className={\"list \" + listEffect}>\r\n          <div className={\"list-bg-done \" + doneEffect} />\r\n          <div className=\"list-col-1\">\r\n            <CustomCheckBox\r\n              id={\"cb\" + props.task.id}\r\n              checked={taskDone}\r\n              onChange={e => {\r\n                setTaskDone(e.target.checked);\r\n\r\n                if (e.target.checked) {\r\n                  setDoneEffect(\"list-bg-done-show\");\r\n                } else {\r\n                  setDoneEffect(\"list-bg-done-close\");\r\n                }\r\n\r\n                UpdateTaskHandler(e);\r\n              }}\r\n            />\r\n          </div>\r\n          <div className=\"list-col-2\">\r\n            <input\r\n              className={\r\n                doneEffect\r\n                  ? \"list-col-2-input\" /* Add effects here if DONE */\r\n                  : \"list-col-2-input\"\r\n              }\r\n              placeholder=\"Edit Title\"\r\n              type=\"text\"\r\n              id={\"txt\" + props.id}\r\n              disabled={isEdit}\r\n              value={taskTitle}\r\n              onChange={e => {\r\n                setTaskTitle(e.target.value);\r\n              }}\r\n            />\r\n            <span className=\"input-effect\" />\r\n            <input\r\n              type=\"time\"\r\n              className=\"list-col-2-time\"\r\n              value={taskTime}\r\n              disabled={isEdit}\r\n              onChange={e => {\r\n                setTaskTime(e.target.value);\r\n                console.log(taskTime);\r\n              }}\r\n            />\r\n            <textarea\r\n              disabled={isEdit}\r\n              className=\"list-col-2-desc\"\r\n              value={taskDesc}\r\n              placeholder=\"Short description here...\"\r\n              maxLength={45}\r\n              onChange={e => {\r\n                setTaskDesc(e.target.value);\r\n              }}\r\n            />\r\n            <span className=\"description-effect\" />\r\n          </div>\r\n\r\n          <div className=\"list-col-3\">\r\n            <button\r\n              className={isEdit ? \"btn btn-edit\" : \"btn btn-done\"}\r\n              onClick={e => {\r\n                e.preventDefault();\r\n                //If in Edit Mode and pressed DONE\r\n                if (!isEdit) {\r\n                  UpdateTaskHandler(e);\r\n                }\r\n\r\n                setIsEdit(!isEdit);\r\n              }}\r\n            >\r\n              <FontAwesomeIcon className=\"btn-icon\" icon={faEdit} />\r\n              <span className=\"btn-text\">{isEdit ? \"EDIT\" : \"DONE\"}</span>\r\n            </button>\r\n            <button\r\n              className=\"btn btn-delete\"\r\n              onClick={e => {\r\n                e.preventDefault();\r\n                setListEffect(\"list-delete\");\r\n                setTimeout(() => {\r\n                  DeleteTaskHandler(props.task);\r\n                }, 200);\r\n              }}\r\n            >\r\n              <FontAwesomeIcon className=\"btn-icon\" icon={faTrash} />\r\n              <span className=\"btn-text\">DELETE</span>\r\n            </button>\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      {/* <div className=\"list-bottom-border\"> </div> */}\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\n\r\nimport \"./ListNew.css\";\r\nimport CustomCheckbox from \"./CustomCheckbox.js\";\r\n\r\nexport default function ListNew(props) {\r\n  //Animations\r\n  const [animContainer, setAnimContainer] = useState(\r\n    \"list-new-container-anim-show\"\r\n  );\r\n  const [animList, setListAnim] = useState(\"list-new-anim-in\");\r\n\r\n  //Input control\r\n  //..useState\r\n  //............\r\n  const [taskTitle, setTaskTitle] = useState(\"\");\r\n  const [taskDesc, setTaskDescription] = useState(\"\");\r\n  const [taskIsTimeSet, setTaskIsTimeSet] = useState(false);\r\n  const [taskTime, setTaskTime] = useState(\"\");\r\n\r\n  const closeWindowHandler = e => {\r\n    if (taskTitle.length > 0) {\r\n      //Animate\r\n      setAnimContainer(\"list-new-container-anim-close\");\r\n      setListAnim(\"list-new-anim-out\");\r\n\r\n      //Give some time to show effect\r\n      setTimeout(e => {\r\n        const newTask = {\r\n          id: props.newID,\r\n          title: taskTitle,\r\n          description: taskDesc,\r\n          setTime: taskIsTimeSet,\r\n          time: taskTime,\r\n          isDone: false\r\n        };\r\n\r\n        props.addNewTask(newTask);\r\n        props.closeWindow();\r\n      }, 800);\r\n    } else {\r\n      console.log(\"title is blank\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className={\"list-new-container \" + animContainer}>\r\n      <div className={\"list-new \" + animList}>\r\n        <div className=\"list-new-btn-cancel-container\">\r\n          <button\r\n            className=\"list-new-btn-cancel\"\r\n            onClick={e => {\r\n              e.preventDefault();\r\n              setAnimContainer(\"list-new-container-anim-close\");\r\n              setListAnim(\"list-new-anim-out\");\r\n\r\n              setTimeout(() => {\r\n                props.closeWindow();\r\n              }, 800);\r\n            }}\r\n          >\r\n            X\r\n          </button>\r\n        </div>\r\n\r\n        <h2 className=\"list-new-title\">New Task</h2>\r\n        <label>\r\n          Title <span style={{ color: \"#d63031\" }}>*</span>\r\n        </label>\r\n        <input\r\n          name=\"title\"\r\n          type=\"text\"\r\n          className=\"list-new-input\"\r\n          value={taskTitle}\r\n          onChange={e => {\r\n            setTaskTitle(e.target.value);\r\n          }}\r\n        />\r\n        <span className=\"input-effect\" />\r\n\r\n        <label>Description</label>\r\n        <textarea\r\n          name=\"description\"\r\n          placeholder=\"Description here\"\r\n          className=\"list-new-desc\"\r\n          value={taskDesc}\r\n          maxLength={45}\r\n          rows={2}\r\n          onChange={e => {\r\n            setTaskDescription(e.target.value);\r\n          }}\r\n        />\r\n        <span className=\"desc-effect\" />\r\n\r\n        <label>Set Time</label>\r\n        <CustomCheckbox\r\n          id={\"new\" + props.newID}\r\n          name=\"setTime\"\r\n          checked={taskIsTimeSet}\r\n          onChange={e => {\r\n            setTaskIsTimeSet(e.target.checked);\r\n            console.log(e.target.checked);\r\n          }}\r\n        />\r\n        <input\r\n          name=\"time\"\r\n          type=\"time\"\r\n          className=\"list-new-time\"\r\n          disabled={taskIsTimeSet ? false : true}\r\n          value={taskIsTimeSet ? taskTime : \"\"}\r\n          onChange={e => {\r\n            setTaskTime(e.target.value);\r\n          }}\r\n        />\r\n\r\n        <button\r\n          className=\"list-new-btn-done\"\r\n          onClick={e => {\r\n            e.preventDefault();\r\n            closeWindowHandler(e);\r\n          }}\r\n        >\r\n          DONE\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\n\r\nimport \"../assests/css/fonts/fonts.css\";\r\nimport \"./ListMain.css\";\r\n\r\nimport List from \"./List\";\r\nimport ListNew from \"./ListNew\";\r\n\r\nexport default function ListMain(props) {\r\n  const [tasks, setTasks] = useState(props.taskList.tasks);\r\n\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [addNew, setAddNew] = useState(false);\r\n  //Add new task\r\n  const CreateNewTask = task => {\r\n    setIsLoading(true);\r\n    let copyTasks = tasks;\r\n    copyTasks.concat(task);\r\n\r\n    setTasks(tasks.concat(task));\r\n    props.syncListbyTLID(props.taskList.id, copyTasks);\r\n\r\n    setTimeout(() => {\r\n      setIsLoading(false);\r\n    }, 200);\r\n  };\r\n  //Update task\r\n  const UpdateTask = taskUpdated => {\r\n    setIsLoading(true);\r\n\r\n    //Copy array to temporary\r\n    let copyTasks = tasks;\r\n    //Update temporary array\r\n    copyTasks[taskUpdated.id] = taskUpdated;\r\n\r\n    setTasks(copyTasks);\r\n    props.syncListbyTLID(props.taskList.id, copyTasks);\r\n\r\n    setTimeout(() => {\r\n      setIsLoading(false);\r\n    }, 200);\r\n  };\r\n  //Delete task\r\n  const DeleteTask = task => {\r\n    setIsLoading(true);\r\n\r\n    //Copy to array to temporary\r\n    let copyTasks = tasks.filter(arr => arr.id !== task.id);\r\n\r\n    setTasks(copyTasks);\r\n    props.syncListbyTLID(props.taskList.id, copyTasks);\r\n\r\n    setIsLoading(false);\r\n  };\r\n\r\n  const CloseAddNew = () => {\r\n    setAddNew(false);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {addNew && (\r\n        <ListNew\r\n          addNewTask={CreateNewTask}\r\n          closeWindow={CloseAddNew}\r\n          newID={tasks.length + 1}\r\n        />\r\n      )}\r\n      <div className={isLoading ? \"list-all list-all-disabled\" : \"list-all\"}>\r\n        <div className=\"list-all-title\">\r\n          <h2 className=\"title\">{props.taskList.title}</h2>\r\n        </div>\r\n        {tasks.map((task, index) => {\r\n          return (\r\n            <List\r\n              id={task.id}\r\n              key={task.id}\r\n              task={task}\r\n              deleteTask={DeleteTask}\r\n              updateTask={UpdateTask}\r\n              testFunc={props.tempFunc}\r\n              delay={index * 50}\r\n            />\r\n          );\r\n        })}\r\n        <div className=\"list-all-add-task\">\r\n          <button\r\n            onClick={e => {\r\n              e.preventDefault();\r\n              setAddNew(true);\r\n            }}\r\n          >\r\n            + ADD TASK\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\nimport \"../assests/css/fonts/fonts.css\";\r\nimport \"./Header.css\";\r\n\r\nexport default function Header(props) {\r\n  return <div className=\"header\">{props.title}</div>;\r\n}\r\n","const taskDB = [\r\n  {\r\n    user: {\r\n      id: 0,\r\n      name: \"Lawrence\",\r\n      password: \"Lawrence\"\r\n    },\r\n    tasklists: [\r\n      {\r\n        id: 0,\r\n        title: \"Day 1\",\r\n        tasks: [\r\n          {\r\n            id: 0,\r\n            title: \"Wake Up\",\r\n            description: \"\",\r\n            setTime: true,\r\n            time: new Date().getHours() + \":\" + new Date().getMinutes(),\r\n            isDone: false\r\n          },\r\n          {\r\n            id: 1,\r\n            title: \"Design\",\r\n            description: \"Lorem isposum Lorem isposum Lorem isposum \",\r\n            setTime: false,\r\n            time: new Date().getHours() + \":\" + new Date().getMinutes(),\r\n            isDone: true\r\n          },\r\n          {\r\n            id: 2,\r\n            title: \"Develop\",\r\n            description:\r\n              \"Lorem isposum Lorem isposum Lorem isposum Lorem isposum \",\r\n            setTime: false,\r\n            time: new Date().getHours() + \":\" + new Date().getMinutes(),\r\n            isDone: true\r\n          },\r\n          {\r\n            id: 3,\r\n            title: \"Repeat\",\r\n            description: \"\",\r\n            setTime: true,\r\n            time: new Date().getHours() + \":\" + new Date().getMinutes(),\r\n            isDone: false\r\n          }\r\n        ]\r\n      }\r\n    ]\r\n  }\r\n];\r\n\r\nexport default taskDB;\r\n","import React, { useState, useEffect } from \"react\";\nimport ListMain from \"./components/ListMain.js\";\nimport Header from \"./components/Header.js\";\n\nimport \"./assests/css/fonts/fonts.css\";\nimport \"./styles.css\";\n\nimport taskDB from \"./temp/taskDB.js\";\n\nexport default function App() {\n  const [userDB, setUserDB] = useState(taskDB);\n\n  //UPDATED TASKS BY TASKLIST ID MANAGED HERE\n  const SyncTasksbyTLID = (taskListID, tasksUpdated) => {\n    let copyUserDB = userDB;\n    copyUserDB[0].tasklists[taskListID].tasks = tasksUpdated;\n    setUserDB(copyUserDB);\n  };\n\n  return (\n    <div>\n      <Header title=\"WhatToDo\" />\n      <ListMain\n        taskList={userDB[0].tasklists[0]}\n        syncListbyTLID={SyncTasksbyTLID}\n      />\n    </div>\n  );\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  rootElement\n);\n"],"sourceRoot":""}