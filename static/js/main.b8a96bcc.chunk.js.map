{"version":3,"sources":["components/CustomCheckbox.js","components/List.js","components/ListNew.js","components/CustomSpinner.js","components/ListMain.js","components/Header.js","App.js","index.js"],"names":["CustomCheckBox","props","react_default","a","createElement","style","className","name","type","checked","id","onChange","e","htmlFor","label","List","_useState","useState","_useState2","Object","slicedToArray","isEdit","setIsEdit","_useState3","task","title","_useState4","taskTitle","setTaskTitle","_useState5","description","_useState6","taskDesc","setTaskDesc","_useState7","time","_useState8","taskTime","setTaskTime","_useState9","Boolean","isDone","_useState10","taskDone","setTaskDone","_useState11","_useState12","showComponent","setShowComponent","_useState13","_useState14","listEffect","setListEffect","_useState15","_useState16","doneEffect","setDoneEffect","useEffect","UpdateTaskHandler","taskUpdate","_id","setTime","length","target","updateTask","placeholder","disabled","value","console","log","maxLength","onClick","preventDefault","react_fontawesome_index_es","icon","faEdit","setTimeout","deleteTask","DeleteTaskHandler","faTrash","ListNew","animContainer","setAnimContainer","animList","setListAnim","setTaskDescription","taskIsTimeSet","setTaskIsTimeSet","closeWindow","color","rows","newID","newTask","addNewTask","closeWindowHandler","CustomSpinner","ListMain","taskList","tasks","setTasks","isLoaded","setIsLoaded","addNew","setAddNew","fetchURL","UpdateTask","taskUpdated","fetchOption","method","headers","Content-type","body","JSON","stringify","fetch","then","res","json","result","DeleteTask","ListNew_ListNew","map","index","List_List","key","testFunc","tempFunc","CustomSpinner_CustomSpinner","Header","App","tasksLists","setTasksLists","API_URL","error","Header_Header","ListMain_ListMain","rootElement","document","getElementById","ReactDOM","render"],"mappings":"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","file":"static/js/main.b8a96bcc.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\n\r\nimport \"./CustomCheckbox.css\";\r\nimport \"@fortawesome/fontawesome-svg-core/styles.css\";\r\n\r\nexport default function CustomCheckBox(props) {\r\n  return (\r\n    <div style={props.style} className={\"checkbox-container\"}>\r\n      <input\r\n        className={\"checkbox \" + props.className}\r\n        name={props.name}\r\n        type=\"checkbox\"\r\n        checked={props.checked}\r\n        id={props.id}\r\n        onChange={e => {\r\n          props.onChange(e);\r\n        }}\r\n      />\r\n      <label htmlFor={props.id}>{props.label}</label>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { faEdit, faTrash } from \"@fortawesome/free-solid-svg-icons/\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\n\r\nimport CustomCheckBox from \"./CustomCheckbox.js\";\r\n\r\nimport \"../assests/css/fonts/fonts.css\";\r\nimport \"./List.css\";\r\n\r\nexport default function List(props) {\r\n\tconst [isEdit, setIsEdit] = useState(true);\r\n\r\n\tconst [taskTitle, setTaskTitle] = useState(props.task.title);\r\n\tconst [taskDesc, setTaskDesc] = useState(props.task.description);\r\n\tconst [taskTime, setTaskTime] = useState(props.task.time);\r\n\tconst [taskDone, setTaskDone] = useState(Boolean(props.task.isDone));\r\n\r\n\tconst [showComponent, setShowComponent] = useState(false);\r\n\tconst [listEffect, setListEffect] = useState(\"list-add\");\r\n\tconst [doneEffect, setDoneEffect] = useState(\r\n\t\ttaskDone ? \"list-bg-done-show\" : \"\"\r\n\t);\r\n\r\n\tuseEffect(() => {\r\n\t\tsetShowComponent(true);\r\n\t});\r\n\r\n\t//****UPDATES ON TASKS HERE\r\n\tconst UpdateTaskHandler = (e) => {\r\n\t\t//SETUP UPDATED TASK\r\n\t\tlet taskUpdate = {\r\n\t\t\t_id: props.task._id,\r\n\t\t\ttitle: taskTitle,\r\n\t\t\tdescription: taskDesc,\r\n\t\t\tsetTime: taskTime.length > 0 ? true : false,\r\n\t\t\ttime: taskTime,\r\n\t\t\tisDone: e.target.checked,\r\n\t\t};\r\n\r\n\t\t//SEND TO MAIN FOR UPDATE\r\n\t\tprops.updateTask(taskUpdate);\r\n\t};\r\n\r\n\t//****DELETION ON TASKS HERE\r\n\tconst DeleteTaskHandler = (task) => {\r\n\t\tprops.deleteTask(props.task);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t{showComponent && (\r\n\t\t\t\t<div className={\"list \" + listEffect}>\r\n\t\t\t\t\t<div className={\"list-bg-done \" + doneEffect} />\r\n\t\t\t\t\t<div className=\"list-col-1\">\r\n\t\t\t\t\t\t<CustomCheckBox\r\n\t\t\t\t\t\t\tid={\"cb\" + props.task._id}\r\n\t\t\t\t\t\t\tchecked={taskDone}\r\n\t\t\t\t\t\t\tonChange={(e) => {\r\n\t\t\t\t\t\t\t\tsetTaskDone(e.target.checked);\r\n\r\n\t\t\t\t\t\t\t\tif (e.target.checked) {\r\n\t\t\t\t\t\t\t\t\tsetDoneEffect(\"list-bg-done-show\");\r\n\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\tsetDoneEffect(\"list-bg-done-close\");\r\n\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t\tUpdateTaskHandler(e);\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className=\"list-col-2\">\r\n\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\tclassName={\r\n\t\t\t\t\t\t\t\tdoneEffect\r\n\t\t\t\t\t\t\t\t\t? \"list-col-2-input\" /* Add effects here if DONE */\r\n\t\t\t\t\t\t\t\t\t: \"list-col-2-input\"\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tplaceholder=\"Edit Title\"\r\n\t\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\t\tid={\"txt\" + props.id}\r\n\t\t\t\t\t\t\tdisabled={isEdit}\r\n\t\t\t\t\t\t\tvalue={taskTitle}\r\n\t\t\t\t\t\t\tonChange={(e) => {\r\n\t\t\t\t\t\t\t\tsetTaskTitle(e.target.value);\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t<span className=\"input-effect\" />\r\n\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\ttype=\"time\"\r\n\t\t\t\t\t\t\tclassName=\"list-col-2-time\"\r\n\t\t\t\t\t\t\tvalue={taskTime}\r\n\t\t\t\t\t\t\tdisabled={isEdit}\r\n\t\t\t\t\t\t\tonChange={(e) => {\r\n\t\t\t\t\t\t\t\tsetTaskTime(e.target.value);\r\n\t\t\t\t\t\t\t\tconsole.log(taskTime);\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t<textarea\r\n\t\t\t\t\t\t\tdisabled={isEdit}\r\n\t\t\t\t\t\t\tclassName=\"list-col-2-desc\"\r\n\t\t\t\t\t\t\tvalue={taskDesc}\r\n\t\t\t\t\t\t\tplaceholder=\"Short description here...\"\r\n\t\t\t\t\t\t\tmaxLength={45}\r\n\t\t\t\t\t\t\tonChange={(e) => {\r\n\t\t\t\t\t\t\t\tsetTaskDesc(e.target.value);\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t<span className=\"description-effect\" />\r\n\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t<div className=\"list-col-3\">\r\n\t\t\t\t\t\t<button\r\n\t\t\t\t\t\t\tclassName={isEdit ? \"btn btn-edit\" : \"btn btn-done\"}\r\n\t\t\t\t\t\t\tonClick={(e) => {\r\n\t\t\t\t\t\t\t\te.preventDefault();\r\n\t\t\t\t\t\t\t\t//If in Edit Mode and pressed DONE\r\n\t\t\t\t\t\t\t\tif (!isEdit) {\r\n\t\t\t\t\t\t\t\t\tUpdateTaskHandler(e);\r\n\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t\tsetIsEdit(!isEdit);\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<FontAwesomeIcon className=\"btn-icon\" icon={faEdit} />\r\n\t\t\t\t\t\t\t<span className=\"btn-text\">{isEdit ? \"EDIT\" : \"DONE\"}</span>\r\n\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t<button\r\n\t\t\t\t\t\t\tclassName=\"btn btn-delete\"\r\n\t\t\t\t\t\t\tonClick={(e) => {\r\n\t\t\t\t\t\t\t\te.preventDefault();\r\n\t\t\t\t\t\t\t\tsetListEffect(\"list-delete\");\r\n\t\t\t\t\t\t\t\tsetTimeout(() => {\r\n\t\t\t\t\t\t\t\t\tDeleteTaskHandler(props.task);\r\n\t\t\t\t\t\t\t\t}, 200);\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<FontAwesomeIcon className=\"btn-icon\" icon={faTrash} />\r\n\t\t\t\t\t\t\t<span className=\"btn-text\">DELETE</span>\r\n\t\t\t\t\t\t</button>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t)}\r\n\r\n\t\t\t{/* <div className=\"list-bottom-border\"> </div> */}\r\n\t\t</div>\r\n\t);\r\n}\r\n","import React, { useState } from \"react\";\r\n\r\nimport \"./ListNew.css\";\r\nimport CustomCheckbox from \"./CustomCheckbox.js\";\r\n\r\nexport default function ListNew(props) {\r\n\t//Animations\r\n\tconst [animContainer, setAnimContainer] = useState(\r\n\t\t\"list-new-container-anim-show\"\r\n\t);\r\n\tconst [animList, setListAnim] = useState(\"list-new-anim-in\");\r\n\r\n\t//Input control\r\n\t//..useState\r\n\t//............\r\n\tconst [taskTitle, setTaskTitle] = useState(\"\");\r\n\tconst [taskDesc, setTaskDescription] = useState(\"\");\r\n\tconst [taskIsTimeSet, setTaskIsTimeSet] = useState(false);\r\n\tconst [taskTime, setTaskTime] = useState(\"\");\r\n\r\n\tconst closeWindowHandler = (e) => {\r\n\t\tif (taskTitle.length > 0) {\r\n\t\t\t//Animate\r\n\t\t\tsetAnimContainer(\"list-new-container-anim-close\");\r\n\t\t\tsetListAnim(\"list-new-anim-out\");\r\n\r\n\t\t\t//Give some time to show effect\r\n\t\t\tsetTimeout((e) => {\r\n\t\t\t\tconst newTask = {\r\n\t\t\t\t\ttitle: taskTitle,\r\n\t\t\t\t\tdescription: taskDesc,\r\n\t\t\t\t\tsetTime: taskIsTimeSet,\r\n\t\t\t\t\ttime: taskTime,\r\n\t\t\t\t\tisDone: false,\r\n\t\t\t\t};\r\n\t\t\t\tprops.addNewTask(newTask);\r\n\t\t\t\tprops.closeWindow();\r\n\t\t\t}, 800);\r\n\t\t} else {\r\n\t\t\tconsole.log(\"title is blank\");\r\n\t\t}\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div className={\"list-new-container \" + animContainer}>\r\n\t\t\t<div className={\"list-new \" + animList}>\r\n\t\t\t\t<div className=\"list-new-btn-cancel-container\">\r\n\t\t\t\t\t<button\r\n\t\t\t\t\t\tclassName=\"list-new-btn-cancel\"\r\n\t\t\t\t\t\tonClick={(e) => {\r\n\t\t\t\t\t\t\te.preventDefault();\r\n\t\t\t\t\t\t\tsetAnimContainer(\"list-new-container-anim-close\");\r\n\t\t\t\t\t\t\tsetListAnim(\"list-new-anim-out\");\r\n\r\n\t\t\t\t\t\t\tsetTimeout(() => {\r\n\t\t\t\t\t\t\t\tprops.closeWindow();\r\n\t\t\t\t\t\t\t}, 800);\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\tX\r\n\t\t\t\t\t</button>\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t<h2 className=\"list-new-title\">New Task</h2>\r\n\t\t\t\t<label>\r\n\t\t\t\t\tTitle <span style={{ color: \"#d63031\" }}>*</span>\r\n\t\t\t\t</label>\r\n\t\t\t\t<input\r\n\t\t\t\t\tname=\"title\"\r\n\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\tclassName=\"list-new-input\"\r\n\t\t\t\t\tvalue={taskTitle}\r\n\t\t\t\t\tonChange={(e) => {\r\n\t\t\t\t\t\tsetTaskTitle(e.target.value);\r\n\t\t\t\t\t}}\r\n\t\t\t\t/>\r\n\t\t\t\t<span className=\"input-effect\" />\r\n\r\n\t\t\t\t<label>Description</label>\r\n\t\t\t\t<textarea\r\n\t\t\t\t\tname=\"description\"\r\n\t\t\t\t\tplaceholder=\"Description here\"\r\n\t\t\t\t\tclassName=\"list-new-desc\"\r\n\t\t\t\t\tvalue={taskDesc}\r\n\t\t\t\t\tmaxLength={45}\r\n\t\t\t\t\trows={2}\r\n\t\t\t\t\tonChange={(e) => {\r\n\t\t\t\t\t\tsetTaskDescription(e.target.value);\r\n\t\t\t\t\t}}\r\n\t\t\t\t/>\r\n\t\t\t\t<span className=\"desc-effect\" />\r\n\r\n\t\t\t\t<label>Set Time</label>\r\n\t\t\t\t<CustomCheckbox\r\n\t\t\t\t\tid={\"new\" + props.newID}\r\n\t\t\t\t\tname=\"setTime\"\r\n\t\t\t\t\tchecked={taskIsTimeSet}\r\n\t\t\t\t\tonChange={(e) => {\r\n\t\t\t\t\t\tsetTaskIsTimeSet(e.target.checked);\r\n\t\t\t\t\t\tconsole.log(e.target.checked);\r\n\t\t\t\t\t}}\r\n\t\t\t\t/>\r\n\t\t\t\t<input\r\n\t\t\t\t\tname=\"time\"\r\n\t\t\t\t\ttype=\"time\"\r\n\t\t\t\t\tclassName=\"list-new-time\"\r\n\t\t\t\t\tdisabled={taskIsTimeSet ? false : true}\r\n\t\t\t\t\tvalue={taskIsTimeSet ? taskTime : \"\"}\r\n\t\t\t\t\tonChange={(e) => {\r\n\t\t\t\t\t\tsetTaskTime(e.target.value);\r\n\t\t\t\t\t}}\r\n\t\t\t\t/>\r\n\r\n\t\t\t\t<button\r\n\t\t\t\t\tclassName=\"list-new-btn-done\"\r\n\t\t\t\t\tonClick={(e) => {\r\n\t\t\t\t\t\te.preventDefault();\r\n\t\t\t\t\t\tcloseWindowHandler(e);\r\n\t\t\t\t\t}}\r\n\t\t\t\t>\r\n\t\t\t\t\tDONE\r\n\t\t\t\t</button>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n}\r\n","import React from \"react\";\r\nimport \"./CustomSpinner.css\";\r\n\r\nexport default function CustomSpinner(props) {\r\n\treturn <div className=\"spinner\"></div>;\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\n\r\nimport \"../assests/css/fonts/fonts.css\";\r\nimport \"./ListMain.css\";\r\n\r\nimport List from \"./List\";\r\nimport ListNew from \"./ListNew\";\r\nimport CustomSpinner from \"./CustomSpinner\";\r\n\r\nexport default function ListMain(props) {\r\n\tconst [tasks, setTasks] = useState(props.taskList.tasks);\r\n\tconst [isLoaded, setIsLoaded] = useState(true);\r\n\tconst [addNew, setAddNew] = useState(false);\r\n\r\n\tconst fetchURL =\r\n\t\t\"https://protected-beyond-39550.herokuapp.com/api/tasklists/task/0/0\";\r\n\r\n\t// const fetchURL = \"http://localhost:5000/api/tasklists/task/0/0\";\r\n\r\n\t//Add new task\r\n\tconst CreateNewTask = (task) => {\r\n\t\tsetIsLoaded(false);\r\n\r\n\t\tconst fetchOption = {\r\n\t\t\tmethod: \"PUT\",\r\n\t\t\theaders: { \"Content-type\": \"application/json\" },\r\n\t\t\tbody: JSON.stringify({\r\n\t\t\t\ttitle: task.title,\r\n\t\t\t\tdescription: task.description,\r\n\t\t\t\tsetTime: task.setTime,\r\n\t\t\t\ttime: task.time,\r\n\t\t\t\tisDone: task.isDone,\r\n\t\t\t}),\r\n\t\t};\r\n\t\tfetch(fetchURL, fetchOption)\r\n\t\t\t.then((res) => res.json())\r\n\t\t\t.then((result) => {\r\n\t\t\t\tsetTasks(result.tasks);\r\n\t\t\t});\r\n\t\tsetIsLoaded(true);\r\n\t};\r\n\r\n\t//Update task\r\n\tconst UpdateTask = (taskUpdated) => {\r\n\t\tsetIsLoaded(false);\r\n\t\tconsole.log(\"UPDATE TASK\");\r\n\t\tconsole.log(taskUpdated);\r\n\r\n\t\tconst fetchOption = {\r\n\t\t\tmethod: \"POST\",\r\n\t\t\theaders: { \"Content-type\": \"application/json\" },\r\n\t\t\tbody: JSON.stringify({\r\n\t\t\t\t_id: taskUpdated._id,\r\n\t\t\t\ttitle: taskUpdated.title,\r\n\t\t\t\tdescription: taskUpdated.description,\r\n\t\t\t\tsetTime: taskUpdated.setTime,\r\n\t\t\t\ttime: taskUpdated.time,\r\n\t\t\t\tisDone: taskUpdated.isDone,\r\n\t\t\t}),\r\n\t\t};\r\n\t\tfetch(fetchURL, fetchOption)\r\n\t\t\t.then((res) => res.json())\r\n\t\t\t.then((result) => {\r\n\t\t\t\tsetTasks(result.tasks);\r\n\t\t\t});\r\n\r\n\t\tsetIsLoaded(true);\r\n\t};\r\n\t//Delete task\r\n\tconst DeleteTask = (task) => {\r\n\t\tsetIsLoaded(false);\r\n\t\tconsole.log(task);\r\n\t\tconst fetchOption = {\r\n\t\t\tmethod: \"DELETE\",\r\n\t\t\theaders: { \"Content-type\": \"application/json\" },\r\n\t\t\tbody: JSON.stringify({\r\n\t\t\t\t_id: task._id,\r\n\t\t\t}),\r\n\t\t};\r\n\t\tfetch(fetchURL, fetchOption)\r\n\t\t\t.then((res) => res.json())\r\n\t\t\t.then((result) => {\r\n\t\t\t\tsetTasks(result.tasks);\r\n\t\t\t});\r\n\t\tsetIsLoaded(true);\r\n\t};\r\n\r\n\tconst CloseAddNew = () => {\r\n\t\tsetAddNew(false);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t{addNew && (\r\n\t\t\t\t<ListNew\r\n\t\t\t\t\taddNewTask={CreateNewTask}\r\n\t\t\t\t\tcloseWindow={CloseAddNew}\r\n\t\t\t\t\tnewID={tasks.length + 1}\r\n\t\t\t\t/>\r\n\t\t\t)}\r\n\t\t\t<div className={isLoaded ? \"list-all\" : \"list-all list-all-disabled\"}>\r\n\t\t\t\t{isLoaded ? (\r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\t<div className=\"list-all-title\">\r\n\t\t\t\t\t\t\t<h2 className=\"title\">{props.taskList.title}</h2>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t{tasks.map((task, index) => {\r\n\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t<List\r\n\t\t\t\t\t\t\t\t\tid={task._id}\r\n\t\t\t\t\t\t\t\t\tkey={task._id}\r\n\t\t\t\t\t\t\t\t\ttask={task}\r\n\t\t\t\t\t\t\t\t\tdeleteTask={DeleteTask}\r\n\t\t\t\t\t\t\t\t\tupdateTask={UpdateTask}\r\n\t\t\t\t\t\t\t\t\ttestFunc={props.tempFunc}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t<div className=\"list-all-add-task\">\r\n\t\t\t\t\t\t\t<button\r\n\t\t\t\t\t\t\t\tonClick={(e) => {\r\n\t\t\t\t\t\t\t\t\te.preventDefault();\r\n\t\t\t\t\t\t\t\t\tsetAddNew(true);\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t+ ADD TASK\r\n\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t) : (\r\n\t\t\t\t\t<h2 className=\"list-all-loading-pos\">\r\n\t\t\t\t\t\t<CustomSpinner />\r\n\t\t\t\t\t</h2>\r\n\t\t\t\t)}\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n}\r\n","import React from \"react\";\r\n\r\nimport \"../assests/css/fonts/fonts.css\";\r\nimport \"./Header.css\";\r\n\r\nexport default function Header(props) {\r\n  return <div className=\"header\">{props.title}</div>;\r\n}\r\n","import React, { useState, useEffect } from \"react\";\nimport ListMain from \"./components/ListMain.js\";\nimport Header from \"./components/Header.js\";\nimport CustomSpinner from \"./components/CustomSpinner.js\";\n\nimport \"./assests/css/fonts/fonts.css\";\nimport \"./styles.css\";\n\nexport default function App() {\n\tconst [tasksLists, setTasksLists] = useState();\n\tconst [isLoaded, setIsLoaded] = useState(false);\n\n\tconst API_URL =\n\t\t\"https://protected-beyond-39550.herokuapp.com/api/tasklists/0/0\";\n\n\t// const API_URL = \"http://localhost:5000/api/tasklists/0/0\";\n\n\tuseEffect(() => {\n\t\tconsole.log(\"AN UPDATE OCCURED APP.JS\");\n\t\tsetIsLoaded(false);\n\t\tfetch(API_URL)\n\t\t\t.then((res) => res.json())\n\t\t\t.then(\n\t\t\t\t(result) => {\n\t\t\t\t\tsetTasksLists(result);\n\t\t\t\t\tsetIsLoaded(true);\n\t\t\t\t},\n\t\t\t\t(error) => {\n\t\t\t\t\tsetTasksLists(error);\n\t\t\t\t\tsetIsLoaded(true);\n\t\t\t\t}\n\t\t\t);\n\t}, []);\n\n\tisLoaded && console.log(\"DATA LOADED DISPLAYING TASKLIST:\");\n\tisLoaded && console.log(tasksLists);\n\n\treturn (\n\t\t<div>\n\t\t\t<Header title=\"WhatToDo\" />\n\t\t\t{isLoaded ? (\n\t\t\t\t<ListMain taskList={tasksLists} API_URL={API_URL} />\n\t\t\t) : (\n\t\t\t\t<h1 className=\"loading-pos\">\n\t\t\t\t\t<CustomSpinner />\n\t\t\t\t</h1>\n\t\t\t)}\n\t\t</div>\n\t);\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(<App />, rootElement);\n"],"sourceRoot":""}